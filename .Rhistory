library(ggplot2)
install.packages("KernSmooth")
install.packages("swirl")
library("swirl")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
c
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
testdir <- dir.create()
dir.create(testdir)
info()
dir.create()
dir.create(getwd())
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exist()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest2.R")
file.rename("mytest.R") to file.rename("mytest2.R")
info()
file.rename("mytest.R" to "mytest2.R")
file.rename("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2")
info()
dir.create(file.path('testdir2', 'testdir3'))
dir.create(file.path('testdir2', 'testdir3')) = TRUE
dir.create(file.path('testdir2', 'testdir3') , recursive = TRUE)
unlink("testdir2", recursive = TRUE)
old.dir
setwd(old.dir)
unlink("testdir", recursive = TRUE)
info()
bye()
x <- 1
x
print(x)
msg <- "hello"
msg
x <- ##incomplete expression
#
info()
x <-5
x
print(x)
x <- 1:20
x
1
1L
1/0
1/inf
0/0
0/0
x <- c(0.5, 0.6)
x
x <- c(TRUE, FALSE)
x
y <- ("a", TRUE)
z <- 0:6
class(x)
class(z)
as.numeric(z)
as.logical(z)
as.character(z)
x <- list(1,"a", TRUE, 1+4i)
x
m <- matrix(nrow=2, ncol=3)
m
dim(m)
attributes(m)
m <- matrix(1:6, nrow=2, ncol=3)
m
m <- 1:10
dim(m) <- c(2,5)
m
x <- 1:3
y <- 10:12
cbind(x,y)
rbind(x,y)
x <- factor(c("yes", "yes", "no", "yes", "no"))
x
table(x)
unclass(x)
x <- factor(c("yes", "yes", "no", "yes", "no")),
x <- data.frame(foo = 1:4 , bar = c(T,T,F,F))
x
nrow(x)
ncal(x)
ncol(x)
x <- 1:3
names(x)
names(x) <- c("foo", "bar", "norf")
x
names(x)
x <- list(a = 1 , b= 2, c = 3)
x
m <- matrix(1:4, nrow = 2, ncol = 2)
dimnames(m) <-list(c("a", "b"),c("c","d"))
m
swirl()
con <- url ("http://www.jhsph.edu", "r")
x <- readLines(con)
head(x)
close(con)
x <- c("a","b", "c", "c", "d", "a")
x[1]
x[2]
x[1:4]
x[x > "a"]
u <- x > "a"
u
x[u]
x <- list(foo = 1:4, bar = 0.6)
x[1]
x[[1]]
x$bar
x$foo
x["bar"]
x[["bar"]]
x <- list(foo = 1:4, bar= 0.6 , baz ="hello")
x[c(1,3)]
name <- "foo"
x[[name]]
x$name
x$foo
x <- 4L
x
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1, 3, 5)
y <- c(3, 2, 10)
z <- cbind(x, y)
z
x <- list(2, "a", "b", TRUE)
x[[1]]
x <- 1:4
y <- 2
z <- x + y
z
x <- c(17, 14, 4, 5, 13, 12 ,10)
x[x>= 10] <- 4
x
getwd()
ls()
cd()
data <- read.csv("hw1_data")
data <- read.csv("hw1_data.csv")
row.names(data)
x <- data.frame(2,3)
x
x <- read.csv(data, row.names = 2)
myFile <- "hw1_data.csv"
myData <- read.csv(myFile, row.names= 2)
myFile <- "hw1_data.csv"
myData <- read.csv(myFile, row.names = 2)
myData <- read.csv(myFile, nrows = 2)
myData
nrow(myFile)
nrow(myData)
nrow("hw1_data.csv")
myData <- read.csv(myFile)
nrow(myData)
myData <- read.csv(myFile, nrows = 2 , skip = 151)
myData
myData <- read.csv(myFile)
myData
good <- complete.cases(myData)
myData[good,]
mean(Ozone)
mean(myData["Ozone"])
data(myData)
myData1
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 4] <- 10
x
x[x>=11]<-4
x
x[x==10]<-4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x==10]<-4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>=11]<-4
x
getwd()
myFile <- "hw_data.csv"
myFIle
myData <- read.csv(myFile)
myFile <- "hw1_data.csv"
myFile
myData <- read.csv(myFile)
myData
is.na(Ozone)
is.na(myData)
sum(myData[,1]=="NA")
sum(myData[,1]=="TRUE")
sum(myData[,1]==NA)
sum(myData[,1]== TRUE)
myData
sum(myData[,1]== NA)
sum(myData[,1]== "NA")
sum(myData[,2]== "NA")
sum(myData[,2]== NA)
sum(myData[,2]== 96)
myData
good <- complete.cases(myData)
myData[good,]
x <- myData[,2]
x
good <- complete.cases(x)
x[good,]
x
myData
mean(myData[2])
mean(myData[[2]])
mean(myData[[,2]])
mean(myData[[1]])
summary(myData)
subset(dataset, Ozone > 31 & Temp > 90)
if (x > 3){}
for (i in 1:10){print (i)}
x <- c("a", "b", "c", "d")
for (i in 1:4){print x[i]}
for (i in 1:4){print (x[i])}
for(letter in x){print(letter)}
for (i in seq_along(x)){print(x[i])}
x <- matrix(1:6, 2, 3)
for(i in seq_len(nrow(x))){for}
x <- 4
class(s)
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x <- 1:4
y <- 2:3
x + y
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] <- 0
x
if (x > 3){}
if (x > 3){y<- 10}
x <- 4
if (x > 3){y<- 10}
y
x <- 2
y
x
for(i in 1:10){print(i)}
x <- c("a", "b", "c", "d")
for (i in 1:4){printx(i)}
for (i in 1:4){print(x[i])}
for(i in seq_along(x)){print(x[i])}
##Nested loops
x <- matrix(1:6, 2, 3)
for (i in seq_len(nrow(x))){for(j in swq_len(ncol(x))){print(x[i, j])}}
for (i in seq_len(nrow(x))){for(j in seq_len(ncol(x))){print(x[i, j])}}
count <- 0
while(count < 10){}
count <- 0
while
count < - 0
while (count < 10){print(count)}
count <- 0
count <- 0
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
add2 <- function(x, y){
x + y
}
add2(3,5)
above <- function(x,n){
use <- x > n
x[use]
}
x <- 1:50
above(x,18)
above <- function(x,n = 10){
use <- x > n
x[use]
}
above(10)
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numberic(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
square <- function(x){
x*x
}
square(2)
square(36)
library(datasets)
data(iris)
?iris
